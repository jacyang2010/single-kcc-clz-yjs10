# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#########
# GCP SA
# AC-3(7), AC-3, AC-16(2) - This service account possesses limited privileges(permissions) and is restricted to performing only the necessary operations for resources within the designated namespace. The service account is associated with the namespace and is assigned roles as required.
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata: # kpt-merge: config-control/networking-sa
  name: networking-sa
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: single-kcc-yjs10 # kpt-set: ${management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMServiceAccount|config-control|networking-sa'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3(7), AC-3, AC-16(2)
  displayName: networking-sa
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: config-control/networking-sa-networkadmin-permissions
  name: networking-sa-networkadmin-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: single-kcc-yjs10 # kpt-set: ${management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|config-control|networking-sa-networkadmin-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Folder
    external: "306903510565" # kpt-set: ${lz-folder-id}
  # AC-3(7), AC-3, AC-16(2)
  role: roles/compute.networkAdmin
  member: "serviceAccount:networking-sa@single-kcc-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:networking-sa@${management-project-id}.iam.gserviceaccount.com
---
# Grant GCP role Security Admin to GCP SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: config-control/networking-sa-security-permissions
  name: networking-sa-security-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: single-kcc-yjs10 # kpt-set: ${management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|config-control|networking-sa-security-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3(7), AC-3, AC-16(2)
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Folder
    external: "306903510565" # kpt-set: ${lz-folder-id}
  role: roles/compute.securityAdmin
  member: "serviceAccount:networking-sa@single-kcc-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:networking-sa@${management-project-id}.iam.gserviceaccount.com
---
# Grant GCP role DNS Admin to GCP SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: config-control/networking-sa-dns-permissions
  name: networking-sa-dns-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: single-kcc-yjs10 # kpt-set: ${management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|config-control|networking-sa-dns-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3(7), AC-3, AC-16(2)
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Folder
    external: "306903510565" # kpt-set: ${lz-folder-id}
  role: roles/dns.admin
  member: "serviceAccount:networking-sa@single-kcc-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:networking-sa@${management-project-id}.iam.gserviceaccount.com
---
# Grant GCP role ACM Admin to networking GCP SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: config-control/networking-sa-service-control-org-permissions
  name: networking-sa-service-control-org-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: single-kcc-yjs10 # kpt-set: ${management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|config-control|networking-sa-service-control-org-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3(7), AC-3, AC-16(2)
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Organization
    external: "54422563716" # kpt-set: ${org-id}
  role: roles/accesscontextmanager.policyAdmin
  member: "serviceAccount:networking-sa@single-kcc-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:networking-sa@${management-project-id}.iam.gserviceaccount.com
---
# Grant GCP role Shared VPC Admin to GCP SA
# needs to be set at the org level because of org policy "constraints/compute.restrictXpnProjectLienRemoval"
# TODO: validate if it could be set at the folder level
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: config-control/networking-sa-xpnadmin-permissions
  name: networking-sa-xpnadmin-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: single-kcc-yjs10 # kpt-set: ${management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|config-control|networking-sa-xpnadmin-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3(7), AC-3, AC-16(2)
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Organization
    external: "54422563716" # kpt-set: ${org-id}
  role: roles/compute.xpnAdmin
  member: "serviceAccount:networking-sa@single-kcc-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:networking-sa@${management-project-id}.iam.gserviceaccount.com
---
# Grant GCP role Service Directory Editor to GCP SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: config-control/networking-sa-servicedirectoryeditor-permissions
  name: networking-sa-servicedirectoryeditor-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: single-kcc-yjs10 # kpt-set: ${management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|config-control|networking-sa-servicedirectoryeditor-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3(7), AC-3, AC-16(2)
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Folder
    external: "306903510565" # kpt-set: ${lz-folder-id}
  role: roles/servicedirectory.editor
  member: "serviceAccount:networking-sa@single-kcc-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:networking-sa@${management-project-id}.iam.gserviceaccount.com
---
# K8S SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPartialPolicy
metadata: # kpt-merge: config-control/networking-sa-workload-identity-binding
  name: networking-sa-workload-identity-binding
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: single-kcc-yjs10 # kpt-set: ${management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPartialPolicy|config-control|networking-sa-workload-identity-binding'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3(7), AC-3, AC-16(2)
  resourceRef:
    name: networking-sa
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
  bindings:
    - role: roles/iam.workloadIdentityUser
      members:
        - member: serviceAccount:single-kcc-yjs10.svc.id.goog[cnrm-system/cnrm-controller-manager-networking] # kpt-set: serviceAccount:${management-project-id}.svc.id.goog[cnrm-system/cnrm-controller-manager-networking]
---
# Namespace created to segregate resources. Each Namespace will be given a specific Kubernetes Service account and GCP Service Account
apiVersion: v1
kind: Namespace
metadata: # kpt-merge: /networking
  name: networking
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: '|Namespace|default|networking'
---
# Link GCP SA to K8S namespace
apiVersion: core.cnrm.cloud.google.com/v1beta1
kind: ConfigConnectorContext
metadata: # kpt-merge: networking/configconnectorcontext.core.cnrm.cloud.google.com
  name: configconnectorcontext.core.cnrm.cloud.google.com
  namespace: networking
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'core.cnrm.cloud.google.com|ConfigConnectorContext|networking|configconnectorcontext.core.cnrm.cloud.google.com'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3(7), AC-3, AC-16(2)
  googleServiceAccount: networking-sa@single-kcc-yjs10.iam.gserviceaccount.com # kpt-set: networking-sa@${management-project-id}.iam.gserviceaccount.com
