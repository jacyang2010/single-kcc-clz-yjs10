# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#########
# GCP SA
# AC-3(7), AC-3, AC-16(2) - This service account possesses limited privileges(permissions) and is restricted to performing only the necessary operations for resources within the designated namespace. The service account is associated with the namespace and is assigned roles as required.
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata: # kpt-merge: config-control/logging-sa
  name: logging-sa
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: single-kcc-yjs10 # kpt-set: ${management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMServiceAccount|config-control|logging-sa'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3(7), AC-3, AC-16(2)
  displayName: logging-sa
---
# Grant GCP role Logging Admin to GCP SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: config-control/logging-sa-logadmin-permissions
  name: logging-sa-logadmin-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: single-kcc-yjs10 # kpt-set: ${management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|config-control|logging-sa-logadmin-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Organization
    external: "54422563716" # kpt-set: ${org-id}
  # AC-3(7), AC-3, AC-16(2)
  role: roles/logging.admin
  member: "serviceAccount:logging-sa@single-kcc-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:logging-sa@${management-project-id}.iam.gserviceaccount.com
---
# Grant role Monitoring Admin to logging SA on management project
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: config-control/logging-sa-monitoring-admin-management-project-id-permissions
  name: logging-sa-monitoring-admin-single-kcc-yjs10-permissions # kpt-set: logging-sa-monitoring-admin-${management-project-id}-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|config-control|logging-sa-monitoring-admin-management-project-id-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    external: single-kcc-yjs10 # kpt-set: ${management-project-id}
  # AC-3(7), AC-3, AC-16(2)
  role: roles/monitoring.admin
  member: "serviceAccount:logging-sa@single-kcc-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:logging-sa@${management-project-id}.iam.gserviceaccount.com
---
# Grant GCP role Monitoring Admin to GCP SA on logging project
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: projects/logging-sa-monitoring-admin-logging-project-id-permissions
  name: logging-sa-monitoring-admin-logging-project-yjs10-permissions # kpt-set: logging-sa-monitoring-admin-${logging-project-id}-permissions
  namespace: projects
  annotations:
    cnrm.cloud.google.com/project-id: single-kcc-yjs10 # kpt-set: ${management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|projects|logging-sa-monitoring-admin-logging-project-id-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    external: logging-project-yjs10 # kpt-set: ${logging-project-id}
  # AC-3(7), AC-3, AC-16(2)
  role: roles/monitoring.admin
  member: "serviceAccount:logging-sa@single-kcc-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:logging-sa@${management-project-id}.iam.gserviceaccount.com
---
# Grant GCP role Storage Admin to GCP SA on logging project
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: projects/logging-sa-storageadmin-logging-project-id-permissions
  name: logging-sa-storageadmin-logging-project-yjs10-permissions # kpt-set: logging-sa-storageadmin-${logging-project-id}-permissions
  namespace: projects
  annotations:
    cnrm.cloud.google.com/project-id: logging-project-yjs10 # kpt-set: ${logging-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|projects|logging-sa-storageadmin-logging-project-id-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    name: logging-project-yjs10 # kpt-set: ${logging-project-id}
  # AC-3(7), AC-3, AC-16(2)
  role: roles/storage.admin
  member: "serviceAccount:logging-sa@single-kcc-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:logging-sa@${management-project-id}.iam.gserviceaccount.com
---
# K8S SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPartialPolicy
metadata: # kpt-merge: config-control/logging-sa-workload-identity-binding
  name: logging-sa-workload-identity-binding
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: single-kcc-yjs10 # kpt-set: ${management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPartialPolicy|config-control|logging-sa-workload-identity-binding'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    name: logging-sa
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
  # AC-3(7), AC-3, AC-16(2)
  bindings:
    - role: roles/iam.workloadIdentityUser
      members:
        - member: serviceAccount:single-kcc-yjs10.svc.id.goog[cnrm-system/cnrm-controller-manager-logging] # kpt-set: serviceAccount:${management-project-id}.svc.id.goog[cnrm-system/cnrm-controller-manager-logging]
---
# K8S namespace
# Namespace created to segregate resources. Each Namespace will be given a specific Kubernetes Service account and GCP Service Account
apiVersion: v1
kind: Namespace
metadata: # kpt-merge: /logging
  name: logging
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: '|Namespace|default|logging'
---
# Link GCP SA to K8S namespace
apiVersion: core.cnrm.cloud.google.com/v1beta1
kind: ConfigConnectorContext
metadata: # kpt-merge: logging/configconnectorcontext.core.cnrm.cloud.google.com
  name: configconnectorcontext.core.cnrm.cloud.google.com
  namespace: logging
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'core.cnrm.cloud.google.com|ConfigConnectorContext|logging|configconnectorcontext.core.cnrm.cloud.google.com'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3(7), AC-3, AC-16(2)
  googleServiceAccount: logging-sa@single-kcc-yjs10.iam.gserviceaccount.com # kpt-set: logging-sa@${management-project-id}.iam.gserviceaccount.com
---
# Grant viewer role on the logging namespace to projects K8S SA
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: # kpt-merge: logging/allow-logging-resource-reference-from-projects
  name: allow-logging-resource-reference-from-projects
  namespace: logging
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: 'rbac.authorization.k8s.io|RoleBinding|logging|allow-logging-resource-reference-from-projects'
# AC-3(7), AC-3, AC-16(2)
roleRef:
  name: cnrm-viewer
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: cnrm-controller-manager-projects
    namespace: cnrm-system
    kind: ServiceAccount
