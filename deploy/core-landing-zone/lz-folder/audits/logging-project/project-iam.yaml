# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
######
# Logs Bucket writer IAM permissions for security log sink
# Binds the service account dynamically created with the LoggingLogSink to the required role to write to the bucket
# AU-9, AC-3 - IAM Policies that assign the dynamically created service account with the LoggingLogSink to the logging bucket writer role and storage admin role on the storage bucket
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPartialPolicy
metadata: # kpt-merge: projects/security-log-bucket-writer-permissions
  name: security-log-bucket-writer-permissions
  namespace: projects
  annotations:
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/logging-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${logging-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPartialPolicy|projects|security-log-bucket-writer-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    kind: Project
    name: logging-project-yjs10 # kpt-set: ${logging-project-id}
    namespace: projects
  # AU-9, AC-3
  bindings:
    - role: roles/logging.bucketWriter
      members:
        - memberFrom:
            logSinkRef:
              name: org-log-sink-security-logging-project-yjs10 # kpt-set: org-log-sink-security-${logging-project-id}
              namespace: logging
---
# Logs Bucket writer IAM permissions for the platform and component log sinks
# Binds the service account dynamically created with the LoggingLogSink to the required role to write to the bucket
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPartialPolicy
metadata: # kpt-merge: projects/platform-and-component-services-log-bucket-writer-permissions
  name: platform-and-component-services-log-bucket-writer-permissions
  namespace: projects
  annotations:
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/logging-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${logging-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPartialPolicy|projects|platform-and-component-services-log-bucket-writer-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    kind: Project
    name: logging-project-yjs10 # kpt-set: ${logging-project-id}
    namespace: projects
  # AU-9, AC-3
  bindings:
    - role: roles/logging.bucketWriter
      members:
        - memberFrom:
            logSinkRef:
              name: platform-and-component-services-log-sink
              namespace: logging
---
# Logs Bucket writer IAM permissions for the platform and component services log sinks
# Binds the service account dynamically created with the LoggingLogSink to the required role to write to the bucket
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPartialPolicy
metadata: # kpt-merge: projects/platform-and-component-services-infra-log-bucket-writer-permissions
  name: platform-and-component-services-infra-log-bucket-writer-permissions
  namespace: projects
  annotations:
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/logging-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${logging-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPartialPolicy|projects|platform-and-component-services-infra-log-bucket-writer-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    kind: Project
    name: logging-project-yjs10 # kpt-set: ${logging-project-id}
    namespace: projects
  # AU-9, AC-3
  bindings:
    - role: roles/logging.bucketWriter
      members:
        - memberFrom:
            logSinkRef:
              name: platform-and-component-services-infra-log-sink
              namespace: logging
---
# Logs Bucket writer IAM permissions for the platform and component log sink
# Binds the service account dynamically created with the LoggingLogSink to the required role to write to the bucket
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPartialPolicy
metadata: # kpt-merge: projects/mgmt-project-cluster-platform-and-component-log-bucket-writer-permissions
  name: mgmt-project-cluster-platform-and-component-log-bucket-writer-permissions
  namespace: projects
  annotations:
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/logging-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${logging-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPartialPolicy|projects|mgmt-project-cluster-platform-and-component-log-bucket-writer-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    kind: Project
    name: logging-project-yjs10 # kpt-set: ${logging-project-id}
    namespace: projects
  # AU-9, AC-3
  bindings:
    - role: roles/logging.bucketWriter
      members:
        - memberFrom:
            logSinkRef:
              name: mgmt-project-cluster-platform-and-component-log-sink
              namespace: logging
---
# Enable data access log configuration on the logging project
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMAuditConfig
metadata: # kpt-merge: projects/logging-project-data-access-log-config
  name: logging-project-data-access-log-config
  namespace: projects
  annotations:
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/logging-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${logging-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMAuditConfig|projects|logging-project-data-access-log-config'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  service: allServices
  # AU-9, AC-3
  auditLogConfigs:
    - logType: DATA_READ
  resourceRef:
    kind: Project
    name: logging-project-yjs10 # kpt-set: ${logging-project-id}
    namespace: projects
