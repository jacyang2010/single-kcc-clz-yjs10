# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#########
# Cloudbilling API
apiVersion: serviceusage.cnrm.cloud.google.com/v1beta1
kind: Service
metadata: # kpt-merge: config-control/management-project-id-cloudbilling
  name: single-kcc-yjs10-cloudbilling # kpt-set: ${management-project-id}-cloudbilling
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/deletion-policy: "abandon"
    cnrm.cloud.google.com/disable-dependent-services: "false"
    internal.kpt.dev/upstream-identifier: 'serviceusage.cnrm.cloud.google.com|Service|config-control|management-project-id-cloudbilling'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceID: cloudbilling.googleapis.com
  projectRef:
    external: single-kcc-yjs10 # kpt-set: ${management-project-id}
---
# Cloudresourcemanager API
apiVersion: serviceusage.cnrm.cloud.google.com/v1beta1
kind: Service
metadata: # kpt-merge: config-control/management-project-id-cloudresourcemanager
  name: single-kcc-yjs10-cloudresourcemanager # kpt-set: ${management-project-id}-cloudresourcemanager
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/deletion-policy: "abandon"
    cnrm.cloud.google.com/disable-dependent-services: "false"
    internal.kpt.dev/upstream-identifier: 'serviceusage.cnrm.cloud.google.com|Service|config-control|management-project-id-cloudresourcemanager'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceID: cloudresourcemanager.googleapis.com
  projectRef:
    external: single-kcc-yjs10 # kpt-set: ${management-project-id}
---
# Serviceusage API
apiVersion: serviceusage.cnrm.cloud.google.com/v1beta1
kind: Service
metadata: # kpt-merge: config-control/management-project-id-serviceusage
  name: single-kcc-yjs10-serviceusage # kpt-set: ${management-project-id}-serviceusage
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/deletion-policy: "abandon"
    cnrm.cloud.google.com/disable-dependent-services: "false"
    internal.kpt.dev/upstream-identifier: 'serviceusage.cnrm.cloud.google.com|Service|config-control|management-project-id-serviceusage'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceID: serviceusage.googleapis.com
  projectRef:
    external: single-kcc-yjs10 # kpt-set: ${management-project-id}
---
# Access Context Manager API
apiVersion: serviceusage.cnrm.cloud.google.com/v1beta1
kind: Service
metadata: # kpt-merge: config-control/management-project-id-accesscontextmanager
  name: single-kcc-yjs10-accesscontextmanager # kpt-set: ${management-project-id}-accesscontextmanager
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/deletion-policy: "abandon"
    cnrm.cloud.google.com/disable-dependent-services: "false"
    internal.kpt.dev/upstream-identifier: 'serviceusage.cnrm.cloud.google.com|Service|config-control|management-project-id-accesscontextmanager'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceID: accesscontextmanager.googleapis.com
  projectRef:
    external: single-kcc-yjs10 # kpt-set: ${management-project-id}
---
# Anthos API
apiVersion: serviceusage.cnrm.cloud.google.com/v1beta1
kind: Service
metadata: # kpt-merge: config-control/management-project-id-anthos
  name: single-kcc-yjs10-anthos # kpt-set: ${management-project-id}-anthos
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/deletion-policy: "abandon"
    cnrm.cloud.google.com/disable-dependent-services: "false"
    internal.kpt.dev/upstream-identifier: 'serviceusage.cnrm.cloud.google.com|Service|config-control|management-project-id-anthos'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceID: anthos.googleapis.com
  projectRef:
    external: single-kcc-yjs10 # kpt-set: ${management-project-id}
